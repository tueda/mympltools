[tool.poetry]
name = "mympltools"
version = "22.5.2-alpha.0"
description = "My personal utilities and settings for Matplotlib."
authors = ["Takahiro Ueda <tueda@st.seikei.ac.jp>"]

[tool.poetry.dependencies]
python = "^3.7"

importlib-metadata = { version = ">=1.0", python = "<3.8" }
matplotlib = "^3.0"
# ensure wheels
numpy = [
    { version = "~1.21.6", python = "3.7" },
    { version = "^1.17.3", python = "3.8" },
    { version = "^1.19.3", python = "3.9" },
    { version = "^1.21.3", python = "3.10" },
    { version = "^1.23.2", python = "3.11" },
]
# optional
scipy = { version = "^1.4", optional = true }

[tool.poetry.dev-dependencies]
pre-commit = "^2.20.0"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
taskipy = "^1.10.3"
# optional
scipy = [
    { version = "^1.7.3", python = "^3.7,<3.11" }, # 1.8.0 requires python>=3.8,<3.11
    { version = "^1.9.0", python = "^3.11" },
]
# for vscode
black = "^22.10.0"
ipykernel = "^6.16.2"  # 6.17 requires python>=3.8

[tool.poetry.extras]
fitting = ["scipy"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError()",
    "return NotImplemented",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203", # for black
]
per-file-ignores = [
    "tests/test_*.py:D100,D103,S101",
]

[tool.isort]
profile = "black"

[tool.mypy]
pretty = true
show_error_codes = true
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cycler.*", "importlib_metadata", "matplotlib.*", "scipy.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--cov-report=html",
    "--cov-report=term",
    "--cov=mympltools",
    "--doctest-modules",
]

[tool.taskipy.tasks]
# Prepare a development environment.
prepare = "pre-commit install --hook-type pre-commit && pre-commit install --hook-type commit-msg"

# Run linters (+ fix).
lint = "pre-commit run --all-files"

# Run tests.
test = "pytest"
